CREATE TABLE `storage`.`perishable_products` (
  `article_number` VARCHAR(10) NOT NULL,
  `name` NVARCHAR(150) NOT NULL,
  `brand` NVARCHAR(50) NULL,
  `family` NVARCHAR(50) NOT NULL,
  `netto_price` INT UNSIGNED NOT NULL,
  `tax_id` INT NOT NULL,
  `quantity` INT UNSIGNED NOT NULL,
  `amount_units` NVARCHAR(10) NOT NULL,
  `critical_quantity` INT NOT NULL,
  `expiration_date` DATE NOT NULL,
  `production_date` DATE NOT NULL,
  PRIMARY KEY (`article_number`));

CREATE TABLE `storage`.`durable_products` (
  `article_number` VARCHAR(10) NOT NULL,
  `name` NVARCHAR(150) NOT NULL,
  `brand` NVARCHAR(50) NULL,
  `family` NVARCHAR(50) NOT NULL,
  `netto_price` INT UNSIGNED NOT NULL,
  `tax_id` INT NOT NULL,
  `quantity` INT UNSIGNED NOT NULL,
  `amount_units` NVARCHAR(10) NOT NULL,
  `critical_quantity` INT UNSIGNED NOT NULL,
  `waranty_period` INT NOT NULL,
  `gross_weight` DECIMAL(4,1) UNSIGNED NOT NULL,
  PRIMARY KEY (`article_number`));

CREATE TABLE `storage`.`state-sales_tax` (
  `tax_key` INT UNSIGNED NOT NULL,
  `description` VARCHAR(20) NOT NULL,
  `multiplier` DOUBLE NOT NULL,
  PRIMARY KEY (`tax_key`));



CREATE DEFINER=`root`@`localhost` PROCEDURE `insert_product`(
  IN article_number VARCHAR(10),
  IN prod_name VARCHAR(150),
  IN brand VARCHAR(50),
  IN family VARCHAR(50),
  IN netto_price INT,
  IN tax_id INT,
  IN quantity INT,
  IN amount_units VARCHAR(10),
  IN critical_quantity INT,
  IN waranty_period INT,
  IN gross_weight DECIMAL(4,1)
  )
BEGIN
  DECLARE local_tax_id INT;
  DECLARE tax_description VARCHAR(20);
  DECLARE tax_multiplier DOUBLE;
  SELECT id,_description,multiplier INTO local_tax_id ,tax_multiplier,tax_description FROM state_sales_tax 
  WHERE tax_key = tax_id;

  IF local_tax_id IS NULL THEN
    INSERT INTO state_sales_tax (tax_key,_description,multiplier) VALUES (tax_id,concat(tax_id,' %'),(tax_id/100)+1);
    SET local_tax_id= tax_id;
    SET tax_description=concat(tax_id,' %');
    SET tax_multiplier=(tax_id/100)+1;
  END IF;

  INSERT INTO durable_products(article_number,`name`,brand,family,
  nett_price,tax_id,quantity,amount_units,critical_quantity,
  waranty_period,gross_weight) 
  VALUES (artical_number,prod_name,brand,family,netto_price,tax_id,quantity,amount_units,
  critical_quantity,waranty_period,gross_weight);

  SELECT 1 AS success;
END
